apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
  compileSdkVersion androidSdk.compile

  defaultConfig {
    minSdkVersion androidSdk.min
    targetSdkVersion androidSdk.target

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }
}

dependencies {
  api "androidx.appcompat:appcompat:$libraries.appcompat"
  api "androidx.constraintlayout:constraintlayout:$libraries.constraintLayout"
  api "com.google.android.material:material:$libraries.material"

  api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  api "androidx.core:core-ktx:$libraries.ktx"

  // Android test dependencies
  androidTestImplementation "org.mockito:mockito-android:${testLibraries.mockito}"
  androidTestImplementation "androidx.test:core:${testLibraries.core}"
  androidTestImplementation "androidx.test:runner:${testLibraries.runner}"
  androidTestImplementation "androidx.test:rules:${testLibraries.runner}"
  androidTestImplementation "androidx.test.ext:truth:${testLibraries.androidTruth}"
  androidTestImplementation "com.google.truth:truth:${testLibraries.truth}"
  androidTestImplementation "androidx.test.espresso:espresso-core:${testLibraries.espresso}"
  androidTestImplementation "androidx.test.espresso:espresso-contrib:${testLibraries.espresso}"
  androidTestImplementation "com.google.android.material:material:${testLibraries.material}"
}
